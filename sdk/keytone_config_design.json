// 整个配置文件, 采用下划线命名, 不可采用驼峰命名的形式(即使采用了, 也不会区分大小写)
{
  // 键音包名称
  "package_name": "示例键音包",

  // 原始音频文件列表，以别名为键
  "audio_files": {
    "sound_alias1": "sound1.mp3", // 别名: 原始音频文件名
    "sound_alias2": "sound2.mp3",
    "sound_alias3": "sound3.ogg"
  },

  // 键音配置，以名称为键(这一步骤主要用于定制每个音的在键音包中的初始音量)(同时, 这也是高级键音配置的必要依赖)
  "key_sounds": {
    // 用户可自行在key_sound_name_1 后, 设置名称为down或up(如key_sound_name_1_down和key_sound_name_1_up)。 官方不对此做强制干涉。
    "key_sound_name_1": {
      "source_sound_path": "原始声音路径",
      "cut": { "start": 0, "end": 123 },
      "volume": 5,
      "group": "" // 为了使键音包更容易管理, 引入group机制
    },
    "key_sound_name_2": {
      "source_sound_path": "原始声音路径",
      "cut": { "start": 130, "end": 253 },
      "volume": 5,
      "group": "" // 为了使键音包更容易管理, 引入group机制
    }
  },

  // 键音配置，以名称为键(高级键音配置只能依赖键音配置, 而不能向键音配置一样, 依赖原始音频文件列表) (用于代替原设计中的custom_key_sound_container)
  "advanced_key_sounds": {
    // 名字可以随便取
    // * 比如可以按照是否随机来分类,
    //   * 大于等于两个的, 为随机, 可以名称中带随机。当然, 不作强制要求, 您完全可以不带这个, 取您自己喜欢的名字。
    //   * down只有一个键音的, 为固定, 可以名称中带固定。当然, 不作强制要求, 您完全可以不带, 取您自己喜欢的名字。
    "random_name_1": {
      // "mode": "random", // 模式可以是随机, 按顺序循环, 或单独固定。 // 不再此内部做任何模式选择, 因为按顺序循环在个人看来似乎是个伪需求。
      // * (就算后续真的有这个需求, 则只需加入一个是否按顺序的条件布尔变量即可), 如下:
      // "is_sequential_loop": "true", // 仅到此选项为"true"时, 调用顺序循环算法来处理, 否则调用默认的随机处理器。(这个也完全可以放到键音容器处理器中去, 而不是在容器配置中)
      "down": {
        "mode": "random", // "random" | "loop"
        "value": []
      },
      "up": {
        "mode": "random", // "random" | "loop"
        "value": []
      }
    }
  },

  "global": {
    "specify_advanced_key_sound": ""
  },

  // 这里默认是空对象, 用户每主动配置一个, 就会增加一个。每删除一个或设置为空一个, 就会减少一个。
  "independent": {
    // "key_code": "key_sound"
    "21": {
      "key_sound": "key_sound_name_1", // 只能使用高级键音名称
      "is_down": true, // 是否使能按下时的声音, 默认为true
      "is_up": true // 是否使能抬起时的声音, 默认为true
    }
  }
}
