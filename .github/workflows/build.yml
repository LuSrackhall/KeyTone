name: Build and Package Windows Application

on:
  push:
    branches:
      - test-github-actions
  pull_request:
    branches:
      - test-github-actions

jobs:
  build:
    runs-on: windows-latest # 指定虚拟机

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # 将仓库代码复制到虚拟机文件系统中

      - name: Set up Go
        uses: actions/setup-go@v5 # 安装go依赖
        with:
          go-version: 1.22.0 # 指定go依赖版本

      - name: Install Node.js
        uses: actions/setup-node@v4 # 安装nodejs
        with:
          node-version: "16" # 指定nodejs 版本

      - name: Install Quasar CLI
        run: npm install -g @quasar/cli # 安装quasar/cli

      - name: Install frontend dependencies
        working-directory: frontend # 以项目根目录为起点,指定对应目录
        run: npm install # 安装前端依赖

      - name: Build Windows Application
        run: | # 指定此run为多个命令依次执行
          cd sdk
          make all

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3 # 安装用于上传最终打包结果到执行完毕界面的脚本
        with:
          name: windows-build
          path: frontend/dist/electron/Packaged/KeyTone-Setup-0.1.0-win.exe

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1 # 安装用户自动创建release的脚本
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: true # 此项为true, 表示发布的是仅自己可见的草稿(我们可以手动编辑检查后在手动发布)
          prerelease: false # 此项若为true, 则会将release打上预发布标志

      - name: Upload Build Artifact to Release
        uses: actions/upload-release-asset@v1 # 安装用于上传最终打包结果到本次release的脚本
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: frontend/dist/electron/Packaged/KeyTone-Setup-0.1.0-win.exe
          asset_name: KeyTone-Setup-0.1.0-win.exe
          asset_content_type: application/octet-stream
