{
  "cSpell.words": ["fsnotify", "godotenv", "gohook", "joho", "robotn"],

  /*************************************************i18n-ally 配置begin************************************************/
  /*
   * 由于我们项目的i18n文件类型, 是使用的ts文件类型, 而不是常用的json文件类型, 因此必须加上它。
   * > 否则插件会报这个错误-->`没有找到文案文件。 项目配置可能存在问题。`
   * > * 报这个错误是因为i18n-ally的2.0版本以后, 默认仅支持json、yaml和json5> [相关链接](https://github.com/lokalise/i18n-ally/wiki/Locale-Formats)
   * > * * 且悬停状态以及ui面版中的编辑和翻译功能, 仅在默认为json、yaml和json5文件格式时生效
   * > * * * 比如使用js/ts的文件格式时, 插件的工作模式会被强制设置为只读, 因为它太动态了。[相关链接](https://github.com/lokalise/i18n-ally/issues/365)
   * *******************************************************************************************************************
   * // 最终为了使用完整的i18n-ally插件的功能, 我们禁用它, 改用json格式的文件
   * // <TIPS: 不允许在json文件内添加注释, i18n-ally插件将无法识别带注释的json文件>。
   * // [相关链接](https://github.com/lokalise/i18n-ally/wiki/Locale-Formats)中提到json允许注释, 可能指的是内联注释而不是语言文件内的注释吧!
   * *******************************************************************************************************************
   */
  // "i18n-ally.enabledParsers": ["ts"],
  "i18n-ally.enabledFrameworks": ["vue"], // 当项目根目录不是你的ui目录时, 请先尝试指定你的ui框架, 以激活自动的递归式识别。
  "i18n-ally.localesPaths": ["frontend/src/i18n"], // 这个一般可以在配置完 "指定的ui框架" 后, 自动识别出来。
  /*
   * 默认的  [\w\d\. \-\[\]]*?  无法匹配以中文或多语言混合的key路径, 只能识别纯英文的路径。
   * > 配置成 .*? 后, 可以识别一些非英文字母的语言(包括中多种语言混合)形式的路径。 [相关链接](https://github.com/lokalise/i18n-ally/wiki/Configurations)
   * > * 比如个人就比较喜欢将 key 的路径 定义为'中文/英文'的结合。
   */
  "i18n-ally.regex.key": ".*?",
  "i18n-ally.keystyle": "nested", // 虽然会自动识别, 但每次自动识别后都会更新到配置中, 相当于自动帮你手动配置。 由于本项目的确仅使用此种json格式, 因此显示配置它。
  "i18n-ally.translate.engines": ["google"],
  // TODO: 用于配置t() 和 $t() 之外的, 可被识别的i18n字符串。(根据具体项目, 具体配置。<如某些情况下, 通过变量定义i18n字符串时, 不想直接使用t()或$t()>)
  "i18n-ally.regex.usageMatchAppend": [
    // "[^\\w\\d]a\\(['\"`]({key})['\"`]",  // 可以识别所有的   a("你的i18n路径key")
    // "[^\\w\\d]['\"`]({key})['\"`]",      // 可以识别所有的   "你的i18n路径key" , 即裸字符串 // 虽然这个配和"i18n-ally.extract.parsers.html"也可以做到, 但范围太大, 报错太多(且无法忽略个别变量名后的字符串)
    "[^\\w\\d]label:[^\\w\\d]['\"`]({key})['\"`]", // 这样就很精确了, 可以避免裸字符串的大范围误伤。 // label: "你的i18n路径key"
    "[^\\w\\d]caption:[^\\w\\d]['\"`]({key})['\"`]" // caption: "你的i18n路径key"
  ]
  // "i18n-ally.extract.parsers.html": {
  //   // 可以添加裸字符串时, 某些不被支持的标签或变量名
  //   "attributes": ["text", "title", "alt", "placeholder", "label", "aria-label", "caption", "aria-caption"],
  //   // 但无法忽略添加裸字符串时, 某些已经支持的标签或变量名
  //   "ignoredTags": ["script", "style"],
  //   "vBind": true,
  //   "inlineText": true
  // }
  /*************************************************i18n-ally 配置end**************************************************/
  // Make sure that particular refactoring templates would be picked up be the bulk extraction depending on the context
}
